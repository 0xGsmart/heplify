
#loadmodule "http_async_client.so"
loadmodule "http_client.so"

/* Configure http_async_client module */
#modparam("http_async_client", "workers", 8)
#modparam("http_async_client", "hash_size", 8192)

/* Configure http_client module */
modparam("http_client", "httpcon", "elasticsearchServer=>ELASTICSEARCH_HTTP_URL");
modparam("http_client", "httpcon", "graylogServer=>GRAYLOG_GELF_HTTP_URL");
modparam("http_client", "httpcon", "influxServer=>INFLUXDB_HTTP_URL");

route[HTTP_POST] {
	xlog("L_CRIT", "HTTP post body $var(elasticsearch_body) $var(graylog_body) $var(influxdb_body)  \n");
	#!ifdef DO_ELASTICSEARCH
	if ($var(elasticsearch_body) != "") {
		$var(resp) = http_connect("elasticsearchServer", "/_bulk", "application/json", "$var(elasticsearch_body)", "$avp(apiResp)");
		xlog("L_INFO", "Elasticsearch API response: $avp(apiResp) code $var(resp)\n");    
	}
	#!endif

	#!ifdef DO_GRAYLOG
	if ($var(graylog_body) != "") {
		$var(resp) = http_connect("graylogServer", "/gelf", "application/json", "$var(graylog_body)", "$avp(apiResp)");
		xlog("L_INFO", "Graylog API response: $avp(apiResp) code $var(resp)\n");
	}
	#!endif

	#!ifdef DO_INFLUXDB
	if ($var(influxdb_body) != "") {
		$var(influxdb_line_protocol) = "/write?consistency=&db=" + "INFLUX_DB" + "&precision=" + "INFLUX_PRECISION" + "&rp=" + "INFLUX_RETENTION";
		$var(resp) = http_connect("influxServer", "$var(influxdb_line_protocol)", "", "$var(influxdb_body)", "$avp(apiResp)");
		xlog("L_INFO", "InfluxDB API response: $avp(apiResp) code $var(resp)\n");
	}
	#!endif
}

